version: "3.9"

services:
  db:
    image: postgres:16
    container_name: dungeon_pg
    environment:
      POSTGRES_DB: dungeon
      POSTGRES_USER: dungeon
      POSTGRES_PASSWORD: dungeon
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dungeon -d dungeon"]
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dungeon_app
    depends_on:
      db:
        condition: service_healthy
      prometheus:
        condition: service_started
      pushgateway:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      # Spring DataSource (override application.yml)
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/dungeon
      SPRING_DATASOURCE_USERNAME: dungeon
      SPRING_DATASOURCE_PASSWORD: dungeon

      # JPA & Flyway
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_FLYWAY_ENABLED: "true"

      # JVM (ZGC: low-latency, suitable for cloud environments)
      JAVA_TOOL_OPTIONS: "-XX:+UseZGC -Xms256m -Xmx512m"
      # Prometheus Pushgateway
      PUSHGATEWAY_URL: "http://pushgateway:9091"


  pushgateway:
    image: prom/pushgateway:v1.8.0
    container_name: pushgateway
    ports:
      - "9091:9091"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9091/-/healthy"]
      interval: 5s
      timeout: 3s
      retries: 10

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    ports:
      - "9090:9090"
    depends_on:
      - pushgateway
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9090/-/healthy"]
      interval: 5s
      timeout: 3s
      retries: 10

  grafana:
    image: grafana/grafana:11.1.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3000/api/health"]
      interval: 5s
      timeout: 3s
      retries: 20

volumes:
  pgdata:
  prometheus_data:
  grafana_data:
